import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class regexlib_1200 {
    /* 1200
     * ^([\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+[a-z]+[A-Z]+|[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+[A-Z]+|[0-9]+[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+|[0-9]+[a-z]+[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+|[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+[A-Z]+[a-z]+|[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+[a-z]+|[0-9]+[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+|[0-9]+[A-Z]+[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+|[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+[0-9]+[A-Z]+|[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+[A-Z]+|[a-z]+[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+|[a-z]+[0-9]+[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+|[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+[A-Z]+[0-9]+|[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+[0-9]+|[a-z]+[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+|[a-z]+[A-Z]+[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+|[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+[0-9]+[a-z]+|[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+[a-z]+|[A-Z]+[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+|[A-Z]+[0-9]+[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+|[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[A-Z]+[a-z]+[0-9]+|[A-Z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[a-z]+[0-9]+|[A-Z]+[a-z]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+[0-9]+|[A-Z]+[a-z]+[0-9]+[\$@!%\*\?&`~\^\\(\)\[\]\{\}<>,\._#-]+)+$
     * POLYNOMIAL
     * nums:2
     * POLYNOMIAL AttackString:"$0aA0$aA0a$A0aA$$0Aa0$Aa0A$a0Aa$"+"$"*5000+"!1 _SLQ_2"
     */
    public static void main(String[] args) throws InterruptedException {
        String regex = "^([\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+[a-z]+[A-Z]+|[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+[A-Z]+|[0-9]+[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+|[0-9]+[a-z]+[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+|[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+[A-Z]+[a-z]+|[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+[a-z]+|[0-9]+[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+|[0-9]+[A-Z]+[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+|[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+[0-9]+[A-Z]+|[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+[A-Z]+|[a-z]+[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+|[a-z]+[0-9]+[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+|[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+[A-Z]+[0-9]+|[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+[0-9]+|[a-z]+[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+|[a-z]+[A-Z]+[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+|[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+[0-9]+[a-z]+|[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+[a-z]+|[A-Z]+[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+|[A-Z]+[0-9]+[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+|[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[A-Z]+[a-z]+[0-9]+|[A-Z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[a-z]+[0-9]+|[A-Z]+[a-z]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+[0-9]+|[A-Z]+[a-z]+[0-9]+[\\$@!%\\*\\?&`~\\^\\\\(\\)\\[\\]\\{\\}<>,\\._#-]+)+$";
        for (int i = 0; i < 1000; i++) {
            StringBuilder attackString = new StringBuilder();
            // 前缀
            attackString.append("$0aA0$aA0a$A0aA$$0Aa0$Aa0A$a0Aa$");
            // 歧义点
            for (int j = 0; j < i * 10000; j++) {
                attackString.append("$");
            }
            // 后缀
            attackString.append("!1 _SLQ_2");
//            System.out.println(attackString);
            long time1 = System.nanoTime();
            boolean isMatch = Pattern.matches(regex, attackString);
//            boolean isMatch = Pattern.compile(regex).matcher(attackString).find();
            long time2 = System.nanoTime();
            System.out.println(i * 10000 + " " + isMatch + " " + (time2 - time1)/1e9);
        }
    }
}
